#将Hugo网站构建和部署到GitHub页面的示例工作流
姓名:将Hugo网站部署到页面

在……之上:
  #在以默认分支为目标的推送上运行
推:
分支机构:["主要"]

  #允许您从“操作”选项卡手动运行此工作流
workflow_dispatch:

#设置GITHUB_TOKEN的权限以允许部署到GitHub页面
权限:
内容:读
页面:写
id-token:写

#只允许一个并发部署，跳过正在运行和最新排队之间排队的运行。
#但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成。
并发性:
组:"页面"
正在取消:假的

#默认为bash
默认值:
跑:
壳:猛击

工作:
  #生成作业
建立:
run-on:ubuntu-最新
env:
Hugo_VERSION:0.128.0
步骤:
-姓名:安装Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
